/**
 * Auto-generated Cloudflare Worker with SSR modules
 * Generated at: {{GENERATED_AT}}
 *
 * DO NOT EDIT MANUALLY - This file is auto-generated by scripts/generate-imports.js
 */

import { routeMatch } from "sxo/src/js/server/utils/route-match.js";
import routes from "../dist/server/routes.json" with { type: "json" };

// Static imports for all server modules (required for Cloudflare Workers)
// {{IMPORTS}}

// Map jsx paths to their imported modules
const moduleMap = {
    // {{MODULE_MAP}}
};

export default {
    async fetch(request) {
        const url = new URL(request.url);

        // Route via manifest: use routes.json + routeMatch() as the source of truth
        const match = routeMatch(url.pathname, routes);
        if (!match) {
            return new Response("Not Found", { status: 404 });
        }
        if (match.invalid) {
            return new Response("Invalid parameters", { status: 400 });
        }

        const { route, params } = match;

        // Get the module from the static import map
        const mod = moduleMap[route.jsx];
        if (!mod) {
            console.error(`Module not found in map for: ${route.jsx}`);
            return new Response("Internal Server Error", { status: 500 });
        }

        const render = mod.default || mod.jsx;

        if (typeof render !== "function") {
            return new Response("Internal Server Error", { status: 500 });
        }
        const html = await render(params);
        const page = `<!doctype html>\n${html}`;

        return new Response(page, {
            status: 200,
            headers: {
                "content-type": "text/html; charset=utf-8",
                "cache-control": "public, max-age=0, must-revalidate",
            },
        });
    },
};
